name: PR Validator
on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]

# ───────────────────────────────────────────────────────────────
# GLOBAL PERMISSIONS & ENV
# ───────────────────────────────────────────────────────────────
permissions:
  contents: write
  pull-requests: write
  checks: write
  security-events: write

env:
  NVD_API_KEY:        ${{ secrets.NVD_API_KEY }}
  SONAR_TOKEN:        ${{ secrets.SONAR_TOKEN }}
  SONAR_PROJECT_KEY:  CyborgCodeSyndicate_temp-project   # 🔄 adjust‑me
  SONAR_ORG:          cyborgcodesyndicate                # 🔄 adjust‑me

# ───────────────────────────────────────────────────────────────
# SINGLE JOB: build • tests • coverage • static analysis • sonar
# ───────────────────────────────────────────────────────────────
jobs:
  pr‑checks:
    runs-on: ubuntu-latest

    steps:
      # ───────────── checkout & JDK ─────────────
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      # ───────────── build & verify ─────────────
      - name: Build & Verify
        id: build
        run: |
          mvn -B clean verify \
              -Ppr-validator \
              -Dnvd.api.key="$NVD_API_KEY" \
              --no-transfer-progress

      # ───── unit‑test report to GitHub (always show) ─────
      - uses: dorny/test-reporter@v2
        if: always()
        with:
          name: Unit Tests
          path: '**/target/surefire-reports/*.xml'
          reporter: java-junit
          max-annotations: 0
          fail-on-error: false
          comment-title: "Unit Test Results"
          comment-mode: summary

      # ─────────────────────────────────────────────────────
      #  MERGE + UPLOAD  ►  SpotBugs  &  Dependency‑Check
      # ─────────────────────────────────────────────────────
      - name: Merge SARIF files
        id: merge-sarif
        shell: bash
        run: |
          set -e
          mkdir -p sarif-merge
          merge() {
            local pattern="$1"; local out="$2"
            mapfile -t FILES < <(find . -path "$pattern")
            [[ ${#FILES[@]} -eq 0 ]] && { echo "No matches for $pattern"; return; }
            jq -s '{version:"2.1.0", runs:(map(.runs) | add)}' "${FILES[@]}" > "sarif-merge/$out"
            echo "Merged ${#FILES[@]} files into sarif-merge/$out"
          }
          merge '*/target/spotbugs/spotbugs*.sarif'     spotbugs-merged.sarif
          merge '**/dependency-check-report.sarif'      dc-merged.sarif

      - name: Upload SpotBugs SARIF
        if: github.event.repository.private == false
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: sarif-merge/spotbugs-merged.sarif

      - name: Upload Dependency‑Check SARIF
        if: github.event.repository.private == false
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: sarif-merge/dc-merged.sarif

      # ───── JaCoCo coverage PR comment ─────
      - name: Add coverage to PR
        id: jacoco
        uses: madrapps/jacoco-report@v1.7.2
        with:
          paths: '**/target/site/jacoco/ut/jacoco.xml'   # 🔄 adjust if your report path differs
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 90
          min-coverage-changed-files: 90
          comment-type: both

      # ───── SonarCloud scan (wait for Q‑gate) ─────
      - name: SonarCloud scan
        id: sonar
        env:
          SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
        run: >
          mvn -B sonar:sonar -Ppr-validator
          -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
          -Dsonar.organization=${{ env.SONAR_ORG }}
          -Dsonar.login=$SONAR_TOKEN
          -Dsonar.qualitygate.wait=true
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.coverage.jacoco.xmlReportPaths=**/target/site/jacoco/ut/jacoco.xml

      # ───── PR summary in GITHUB_STEP_SUMMARY ─────
      - name: Write PR summary
        shell: bash
        run: |
          {
            echo "## ⏱️ PR Quality‑Gate Summary"
            echo ""
            echo "| Check | Status | View |"
            echo "|-------|--------|------|"
            echo "| **Unit Tests** | ${{ steps.build.outcome }} | see *Checks* tab |"
            if [[ "${{ github.event.repository.private }}" == "false" ]]; then
              echo "| **SpotBugs / FindSecBugs** | uploaded SARIF | *Security → Code scanning* |"
              echo "| **OWASP Dependency‑Check** | uploaded SARIF | *Security → Code scanning* |"
            fi
            echo "| **JaCoCo Coverage** | see PR conversation comment | via *jacoco‑report* |"
            echo "| **SonarCloud Quality Gate** | ${{ steps.sonar.outcome }} | [Dashboard](https://sonarcloud.io/dashboard?id=${{ env.SONAR_PROJECT_KEY }}) |"
          } >> "$GITHUB_STEP_SUMMARY"